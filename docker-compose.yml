version: '3'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: tasktrack-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tasktrack
    networks:
      - tasktrack-network

  # Backend API service
  backend:
    build: ./backend
    container_name: tasktrack-backend
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_DIALECT=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=tasktrack
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_RESET=false
      - JWT_SECRET=your_jwt_secret_dev_only
      - AWS_ACCESS_KEY_ID=your_aws_access_key_id
      - AWS_SECRET_ACCESS_KEY=your_aws_secret_key
      - AWS_REGION=us-east-1
      - AWS_S3_BUCKET_NAME=your-tasktrack-bucket
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - tasktrack-network

  # Frontend service
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: tasktrack-frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - tasktrack-network

networks:
  tasktrack-network:
    driver: bridge

volumes:
  postgres-data: 